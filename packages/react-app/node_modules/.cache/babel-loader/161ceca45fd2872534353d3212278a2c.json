{"ast":null,"code":"var _jsxFileName = \"D:\\\\dsdc-dashboard\\\\packages\\\\react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"@apollo/client\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { useCall } from \"@usedapp/core\";\nimport React, { useEffect } from \"react\";\nimport { Container, Header } from \"./components\";\nimport logo from \"./logo.png\";\nimport Dashboard from \"./components/Dashboard\";\nimport { MAINNET_ID, addresses, abis } from \"@uniswap-v2-app/contracts\";\nimport GET_AGGREGATED_UNISWAP_DATA from \"./graphql/subgraph\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _useCall;\n  // Read more about useDapp on https://usedapp.io/\n  const {\n    error: contractCallError,\n    value: reserves\n  } = (_useCall = useCall({\n    contract: new Contract(addresses[MAINNET_ID].pairs[\"DAI-WETH\"], abis.pair),\n    method: \"getReserves\",\n    args: []\n  })) !== null && _useCall !== void 0 ? _useCall : {};\n  const {\n    loading,\n    error: subgraphQueryError,\n    data\n  } = useQuery(GET_AGGREGATED_UNISWAP_DATA);\n  useEffect(() => {\n    if (subgraphQueryError) {\n      console.error(\"Error while querying subgraph:\", subgraphQueryError.message);\n      return;\n    }\n    if (!loading && data && data.uniswapFactories) {\n      console.log({\n        uniswapFactories: data.uniswapFactories\n      });\n    }\n  }, [loading, subgraphQueryError, data]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          width: \"11em\",\n          marginLeft: \"15px\"\n        },\n        src: logo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ce7HVGBEHRzJ7xiHAYJGTi8rZr8=\", false, function () {\n  return [useCall, useQuery];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useQuery","Contract","useCall","React","useEffect","Container","Header","logo","Dashboard","MAINNET_ID","addresses","abis","GET_AGGREGATED_UNISWAP_DATA","jsxDEV","_jsxDEV","App","_s","_useCall","error","contractCallError","value","reserves","contract","pairs","pair","method","args","loading","subgraphQueryError","data","console","message","uniswapFactories","log","children","style","width","marginLeft","src","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/dsdc-dashboard/packages/react-app/src/App.js"],"sourcesContent":["import { useQuery } from \"@apollo/client\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { useCall } from \"@usedapp/core\";\nimport React, { useEffect } from \"react\";\n\nimport { Container, Header} from \"./components\";\n\nimport logo from \"./logo.png\";\n\nimport Dashboard from \"./components/Dashboard\";\nimport { MAINNET_ID, addresses, abis } from \"@uniswap-v2-app/contracts\";\nimport GET_AGGREGATED_UNISWAP_DATA from \"./graphql/subgraph\";\n\n\nfunction App() {\n  // Read more about useDapp on https://usedapp.io/\n  const { error: contractCallError, value: reserves } =\n    useCall({\n      contract: new Contract(addresses[MAINNET_ID].pairs[\"DAI-WETH\"], abis.pair),\n      method: \"getReserves\",\n      args: [],\n    }) ?? {};\n\n  const { loading, error: subgraphQueryError, data } = useQuery(GET_AGGREGATED_UNISWAP_DATA);\n\n  useEffect(() => {\n    if (subgraphQueryError) {\n      console.error(\"Error while querying subgraph:\", subgraphQueryError.message);\n      return;\n    }\n    if (!loading && data && data.uniswapFactories) {\n      console.log({ uniswapFactories: data.uniswapFactories });\n    }\n  }, [loading, subgraphQueryError, data]);\n\n  return (\n    <Container>\n      <Header>\n        <img style={{\n          width: \"11em\",\n          marginLeft: \"15px\"\n        }} src={logo} />\n      </Header>\n      <Dashboard />\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,SAASC,OAAO,QAAQ,eAAe;AACvC,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAExC,SAASC,SAAS,EAAEC,MAAM,QAAO,cAAc;AAE/C,OAAOC,IAAI,MAAM,YAAY;AAE7B,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,SAASC,UAAU,EAAEC,SAAS,EAAEC,IAAI,QAAQ,2BAA2B;AACvE,OAAOC,2BAA2B,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG7D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,QAAA;EACb;EACA,MAAM;IAAEC,KAAK,EAAEC,iBAAiB;IAAEC,KAAK,EAAEC;EAAS,CAAC,IAAAJ,QAAA,GACjDf,OAAO,CAAC;IACNoB,QAAQ,EAAE,IAAIrB,QAAQ,CAACS,SAAS,CAACD,UAAU,CAAC,CAACc,KAAK,CAAC,UAAU,CAAC,EAAEZ,IAAI,CAACa,IAAI,CAAC;IAC1EC,MAAM,EAAE,aAAa;IACrBC,IAAI,EAAE;EACR,CAAC,CAAC,cAAAT,QAAA,cAAAA,QAAA,GAAI,CAAC,CAAC;EAEV,MAAM;IAAEU,OAAO;IAAET,KAAK,EAAEU,kBAAkB;IAAEC;EAAK,CAAC,GAAG7B,QAAQ,CAACY,2BAA2B,CAAC;EAE1FR,SAAS,CAAC,MAAM;IACd,IAAIwB,kBAAkB,EAAE;MACtBE,OAAO,CAACZ,KAAK,CAAC,gCAAgC,EAAEU,kBAAkB,CAACG,OAAO,CAAC;MAC3E;IACF;IACA,IAAI,CAACJ,OAAO,IAAIE,IAAI,IAAIA,IAAI,CAACG,gBAAgB,EAAE;MAC7CF,OAAO,CAACG,GAAG,CAAC;QAAED,gBAAgB,EAAEH,IAAI,CAACG;MAAiB,CAAC,CAAC;IAC1D;EACF,CAAC,EAAE,CAACL,OAAO,EAAEC,kBAAkB,EAAEC,IAAI,CAAC,CAAC;EAEvC,oBACEf,OAAA,CAACT,SAAS;IAAA6B,QAAA,gBACRpB,OAAA,CAACR,MAAM;MAAA4B,QAAA,eACLpB,OAAA;QAAKqB,KAAK,EAAE;UACVC,KAAK,EAAE,MAAM;UACbC,UAAU,EAAE;QACd,CAAE;QAACC,GAAG,EAAE/B;MAAK;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACT,eACT5B,OAAA,CAACN,SAAS;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEhB;AAAC1B,EAAA,CAhCQD,GAAG;EAAA,QAGRb,OAAO,EAM4CF,QAAQ;AAAA;AAAA2C,EAAA,GATtD5B,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}