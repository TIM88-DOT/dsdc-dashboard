{"ast":null,"code":"var _classCallCheck = require(\"D:/pcs/dsdc-dashboard/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"D:/pcs/dsdc-dashboard/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _regeneratorRuntime = require(\"D:/pcs/dsdc-dashboard/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"D:/pcs/dsdc-dashboard/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar cacheUtils = require('./cache-utils.js');\nvar createAsyncMiddleware = require('json-rpc-engine/src/createAsyncMiddleware');\n// `<nil>` comes from https://github.com/ethereum/go-ethereum/issues/16925\nvar emptyValues = [undefined, null, \"<nil>\"];\nmodule.exports = createBlockCacheMiddleware;\nfunction createBlockCacheMiddleware() {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  // validate options\n  var blockTracker = opts.blockTracker;\n  if (!blockTracker) throw new Error('createBlockCacheMiddleware - No BlockTracker specified');\n\n  // create caching strategies\n  var blockCache = new BlockCacheStrategy();\n  var strategies = {\n    perma: blockCache,\n    block: blockCache,\n    fork: blockCache\n  };\n  return createAsyncMiddleware( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(req, res, next) {\n      var type, strategy, blockTag, requestedBlockNumber, latestBlockNumber, cacheResult;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            if (!req.skipCache) {\n              _context.next = 2;\n              break;\n            }\n            return _context.abrupt(\"return\", next());\n          case 2:\n            // check type and matching strategy\n            type = cacheUtils.cacheTypeForPayload(req);\n            strategy = strategies[type]; // If there's no strategy in place, pass it down the chain.\n            if (strategy) {\n              _context.next = 6;\n              break;\n            }\n            return _context.abrupt(\"return\", next());\n          case 6:\n            if (strategy.canCacheRequest(req)) {\n              _context.next = 8;\n              break;\n            }\n            return _context.abrupt(\"return\", next());\n          case 8:\n            // get block reference (number or keyword)\n            blockTag = cacheUtils.blockTagForPayload(req);\n            if (!blockTag) blockTag = 'latest';\n\n            // get exact block number\n            if (!(blockTag === 'earliest')) {\n              _context.next = 14;\n              break;\n            }\n            // this just exists for symmetry with \"latest\"\n            requestedBlockNumber = '0x00';\n            _context.next = 23;\n            break;\n          case 14:\n            if (!(blockTag === 'latest')) {\n              _context.next = 22;\n              break;\n            }\n            _context.next = 17;\n            return blockTracker.getLatestBlock();\n          case 17:\n            latestBlockNumber = _context.sent;\n            // clear all cache before latest block\n            blockCache.clearBefore(latestBlockNumber);\n            requestedBlockNumber = latestBlockNumber;\n            _context.next = 23;\n            break;\n          case 22:\n            // We have a hex number\n            requestedBlockNumber = blockTag;\n          case 23:\n            _context.next = 25;\n            return strategy.get(req, requestedBlockNumber);\n          case 25:\n            cacheResult = _context.sent;\n            if (!(cacheResult === undefined)) {\n              _context.next = 33;\n              break;\n            }\n            _context.next = 29;\n            return next();\n          case 29:\n            _context.next = 31;\n            return strategy.set(req, requestedBlockNumber, res.result);\n          case 31:\n            _context.next = 34;\n            break;\n          case 33:\n            // fill in result from cache\n            res.result = cacheResult;\n          case 34:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function (_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n}\n\n//\n// Cache Strategies\n//\nvar BlockCacheStrategy = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function BlockCacheStrategy() {\n    _classCallCheck(this, BlockCacheStrategy);\n    this.cache = {};\n  }\n  _createClass(BlockCacheStrategy, [{\n    key: \"getBlockCacheForPayload\",\n    value: function getBlockCacheForPayload(payload, blockNumberHex) {\n      var blockNumber = Number.parseInt(blockNumberHex, 16);\n      var blockCache = this.cache[blockNumber];\n      // create new cache if necesary\n      if (!blockCache) {\n        var newCache = {};\n        this.cache[blockNumber] = newCache;\n        blockCache = newCache;\n      }\n      return blockCache;\n    }\n  }, {\n    key: \"get\",\n    value: function () {\n      var _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(payload, requestedBlockNumber) {\n        var blockCache, identifier, cached;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              // lookup block cache\n              blockCache = this.getBlockCacheForPayload(payload, requestedBlockNumber);\n              if (blockCache) {\n                _context2.next = 3;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 3:\n              // lookup payload in block cache\n              identifier = cacheUtils.cacheIdentifierForPayload(payload, true);\n              cached = blockCache[identifier]; // may be undefined\n              return _context2.abrupt(\"return\", cached);\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function get(_x4, _x5) {\n        return _get.apply(this, arguments);\n      }\n      return get;\n    }()\n  }, {\n    key: \"set\",\n    value: function () {\n      var _set = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(payload, requestedBlockNumber, result) {\n        var canCache, blockCache, identifier;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              // check if we can cached this result\n              canCache = this.canCacheResult(payload, result);\n              if (canCache) {\n                _context3.next = 3;\n                break;\n              }\n              return _context3.abrupt(\"return\");\n            case 3:\n              // set the value in the cache\n              blockCache = this.getBlockCacheForPayload(payload, requestedBlockNumber);\n              identifier = cacheUtils.cacheIdentifierForPayload(payload, true);\n              blockCache[identifier] = result;\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function set(_x6, _x7, _x8) {\n        return _set.apply(this, arguments);\n      }\n      return set;\n    }()\n  }, {\n    key: \"canCacheRequest\",\n    value: function canCacheRequest(payload) {\n      // check request method\n      if (!cacheUtils.canCache(payload)) {\n        return false;\n      }\n      // check blockTag\n      var blockTag = cacheUtils.blockTagForPayload(payload);\n      if (blockTag === 'pending') {\n        return false;\n      }\n      // can be cached\n      return true;\n    }\n  }, {\n    key: \"canCacheResult\",\n    value: function canCacheResult(payload, result) {\n      // never cache empty values (e.g. undefined)\n      if (emptyValues.includes(result)) return;\n      // check if transactions have block reference before caching\n      if (['eth_getTransactionByHash', 'eth_getTransactionReceipt'].includes(payload.method)) {\n        if (!result || !result.blockHash || result.blockHash === '0x0000000000000000000000000000000000000000000000000000000000000000') {\n          return false;\n        }\n      }\n      // otherwise true\n      return true;\n    }\n\n    // removes all block caches with block number lower than `oldBlockHex`\n  }, {\n    key: \"clearBefore\",\n    value: function clearBefore(oldBlockHex) {\n      var self = this;\n      var oldBlockNumber = Number.parseInt(oldBlockHex, 16);\n      // clear old caches\n      Object.keys(self.cache).map(Number).filter(function (num) {\n        return num < oldBlockNumber;\n      }).forEach(function (num) {\n        return delete self.cache[num];\n      });\n    }\n  }]);\n  return BlockCacheStrategy;\n}();","map":{"version":3,"names":["cacheUtils","require","createAsyncMiddleware","emptyValues","undefined","module","exports","createBlockCacheMiddleware","opts","arguments","length","blockTracker","Error","blockCache","BlockCacheStrategy","strategies","perma","block","fork","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","req","res","next","type","strategy","blockTag","requestedBlockNumber","latestBlockNumber","cacheResult","wrap","_callee$","_context","prev","skipCache","abrupt","cacheTypeForPayload","canCacheRequest","blockTagForPayload","getLatestBlock","sent","clearBefore","get","set","result","stop","_x","_x2","_x3","apply","_classCallCheck","cache","_createClass","key","value","getBlockCacheForPayload","payload","blockNumberHex","blockNumber","Number","parseInt","newCache","_get","_callee2","identifier","cached","_callee2$","_context2","cacheIdentifierForPayload","_x4","_x5","_set","_callee3","canCache","_callee3$","_context3","canCacheResult","_x6","_x7","_x8","includes","method","blockHash","oldBlockHex","self","oldBlockNumber","Object","keys","map","filter","num","forEach"],"sources":["D:/pcs/dsdc-dashboard/node_modules/eth-json-rpc-middleware/block-cache.js"],"sourcesContent":["const cacheUtils = require('./cache-utils.js')\nconst createAsyncMiddleware = require('json-rpc-engine/src/createAsyncMiddleware')\n// `<nil>` comes from https://github.com/ethereum/go-ethereum/issues/16925\nconst emptyValues = [undefined, null, '\\u003cnil\\u003e']\n\nmodule.exports = createBlockCacheMiddleware\n\n\nfunction createBlockCacheMiddleware(opts = {}) {\n  // validate options\n  const { blockTracker } = opts\n  if (!blockTracker) throw new Error('createBlockCacheMiddleware - No BlockTracker specified')\n\n  // create caching strategies\n  const blockCache = new BlockCacheStrategy()\n  const strategies = {\n    perma: blockCache,\n    block: blockCache,\n    fork: blockCache,\n  }\n\n  return createAsyncMiddleware(async (req, res, next) => {\n    // allow cach to be skipped if so specified\n    if (req.skipCache) {\n      return next()\n    }\n    // check type and matching strategy\n    const type = cacheUtils.cacheTypeForPayload(req)\n    const strategy = strategies[type]\n    // If there's no strategy in place, pass it down the chain.\n    if (!strategy) {\n      return next()\n    }\n    // If the strategy can't cache this request, ignore it.\n    if (!strategy.canCacheRequest(req)) {\n      return next()\n    }\n\n    // get block reference (number or keyword)\n    let blockTag = cacheUtils.blockTagForPayload(req)\n    if (!blockTag) blockTag = 'latest'\n\n    // get exact block number\n    let requestedBlockNumber\n    if (blockTag === 'earliest') {\n      // this just exists for symmetry with \"latest\"\n      requestedBlockNumber = '0x00'\n    } else if (blockTag === 'latest') {\n      // fetch latest block number\n      const latestBlockNumber = await blockTracker.getLatestBlock()\n      // clear all cache before latest block\n      blockCache.clearBefore(latestBlockNumber)\n      requestedBlockNumber = latestBlockNumber\n    } else {\n      // We have a hex number\n      requestedBlockNumber = blockTag\n    }\n\n    // end on a hit, continue on a miss\n    const cacheResult = await strategy.get(req, requestedBlockNumber)\n    if (cacheResult === undefined) {\n      // cache miss\n      // wait for other middleware to handle request\n      await next()\n      // add result to cache\n      await strategy.set(req, requestedBlockNumber, res.result)\n    } else {\n      // fill in result from cache\n      res.result = cacheResult\n    }\n  })\n}\n\n\n//\n// Cache Strategies\n//\n\nclass BlockCacheStrategy {\n  \n  constructor () {\n    this.cache = {}\n  }\n\n  getBlockCacheForPayload (payload, blockNumberHex) {\n    const blockNumber = Number.parseInt(blockNumberHex, 16)\n    let blockCache = this.cache[blockNumber]\n    // create new cache if necesary\n    if (!blockCache) {\n      const newCache = {}\n      this.cache[blockNumber] = newCache\n      blockCache = newCache\n    }\n    return blockCache\n  }\n\n  async get (payload, requestedBlockNumber) {\n    // lookup block cache\n    const blockCache = this.getBlockCacheForPayload(payload, requestedBlockNumber)\n    if (!blockCache) return\n    // lookup payload in block cache\n    const identifier = cacheUtils.cacheIdentifierForPayload(payload, true)\n    const cached = blockCache[identifier]\n    // may be undefined\n    return cached\n  }\n\n  async set (payload, requestedBlockNumber, result) {\n    // check if we can cached this result\n    const canCache = this.canCacheResult(payload, result)\n    if (!canCache) return\n    // set the value in the cache\n    const blockCache = this.getBlockCacheForPayload(payload, requestedBlockNumber)\n    const identifier = cacheUtils.cacheIdentifierForPayload(payload, true)\n    blockCache[identifier] = result\n  }\n\n  canCacheRequest (payload) {\n    // check request method\n    if (!cacheUtils.canCache(payload)) {\n      return false\n    }\n    // check blockTag\n    const blockTag = cacheUtils.blockTagForPayload(payload)\n    if (blockTag === 'pending') {\n      return false\n    }\n    // can be cached\n    return true\n  }\n\n  canCacheResult (payload, result) {\n    // never cache empty values (e.g. undefined)\n    if (emptyValues.includes(result)) return\n    // check if transactions have block reference before caching\n    if (['eth_getTransactionByHash', 'eth_getTransactionReceipt'].includes(payload.method)) {\n      if (!result || !result.blockHash || result.blockHash === '0x0000000000000000000000000000000000000000000000000000000000000000') {\n        return false\n      }\n    }\n    // otherwise true\n    return true\n  }\n\n  // removes all block caches with block number lower than `oldBlockHex`\n  clearBefore (oldBlockHex){\n    const self = this\n    const oldBlockNumber = Number.parseInt(oldBlockHex, 16)\n    // clear old caches\n    Object.keys(self.cache)\n      .map(Number)\n      .filter(num => num < oldBlockNumber)\n      .forEach(num => delete self.cache[num])\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}