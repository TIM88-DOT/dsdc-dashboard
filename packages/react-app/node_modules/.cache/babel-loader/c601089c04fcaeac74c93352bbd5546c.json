{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useCall, useEthers } from \"@usedapp/core\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { addresses, abis } from \"@uniswap-v2-app/contracts\";\nconst useGetTotalRewards = plan => {\n  _s();\n  var _useCall;\n  const [totalRewards, setTotalRewards] = useState();\n  const {\n    account\n  } = useEthers();\n  //   useEffect(() => {\n  //     const getTotalRewards = async () => {\n  //       try {\n  //         const provider = new ethers.providers.JsonRpcProvider(\n  //           \"https://data-seed-prebsc-1-s3.binance.org:8545\"\n  //         );\n  //         const contract = new ethers.Contract(\n  //           addresses.staking,\n  //           abis.staking,\n  //           provider\n  //         );\n  //         const totalRewardsValue = await contract.getEarnedRewards(\n  //           plan,\n  //           account\n  //         );\n  //         setTotalRewards(totalRewardsValue);\n  //       } catch (error) {\n  //         console.error(error);\n  //       }\n  //     };\n\n  //     getTotalRewards();\n  //   }, [account, plan, totalRewards]);\n\n  const {\n    error: totalRewardsError,\n    value: totalRewardsValue\n  } = (_useCall = useCall(account && {\n    contract: new Contract(addresses.staking, abis.staking),\n    method: \"getEarnedRewards\",\n    args: [plan, account]\n  })) !== null && _useCall !== void 0 ? _useCall : {};\n  return totalRewardsValue === null || totalRewardsValue === void 0 ? void 0 : totalRewardsValue[0];\n};\n_s(useGetTotalRewards, \"6JQfgIx/yi6Kse92GTvWtew+Xqc=\", false, function () {\n  return [useEthers, useCall];\n});\nexport default useGetTotalRewards;","map":{"version":3,"names":["useState","useEffect","useCall","useEthers","Contract","addresses","abis","useGetTotalRewards","plan","_s","_useCall","totalRewards","setTotalRewards","account","error","totalRewardsError","value","totalRewardsValue","contract","staking","method","args"],"sources":["D:/dsdc-dashboard/packages/react-app/src/hooks/useGetTotalRewards.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useCall, useEthers } from \"@usedapp/core\";\r\nimport { Contract } from \"@ethersproject/contracts\";\r\nimport { addresses, abis } from \"@uniswap-v2-app/contracts\";\r\n\r\nconst useGetTotalRewards = (plan) => {\r\n  const [totalRewards, setTotalRewards] = useState();\r\n  const { account } = useEthers();\r\n//   useEffect(() => {\r\n//     const getTotalRewards = async () => {\r\n//       try {\r\n//         const provider = new ethers.providers.JsonRpcProvider(\r\n//           \"https://data-seed-prebsc-1-s3.binance.org:8545\"\r\n//         );\r\n//         const contract = new ethers.Contract(\r\n//           addresses.staking,\r\n//           abis.staking,\r\n//           provider\r\n//         );\r\n//         const totalRewardsValue = await contract.getEarnedRewards(\r\n//           plan,\r\n//           account\r\n//         );\r\n//         setTotalRewards(totalRewardsValue);\r\n//       } catch (error) {\r\n//         console.error(error);\r\n//       }\r\n//     };\r\n\r\n//     getTotalRewards();\r\n//   }, [account, plan, totalRewards]);\r\n\r\n  const { error: totalRewardsError, value: totalRewardsValue } =\r\n    useCall(\r\n      account && {\r\n        contract: new Contract(addresses.staking, abis.staking),\r\n        method: \"getEarnedRewards\",\r\n        args: [plan, account],\r\n      }\r\n    ) ?? {};\r\n  return totalRewardsValue?.[0];\r\n};\r\n\r\nexport default useGetTotalRewards;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,OAAO,EAAEC,SAAS,QAAQ,eAAe;AAClD,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,SAASC,SAAS,EAAEC,IAAI,QAAQ,2BAA2B;AAE3D,MAAMC,kBAAkB,GAAIC,IAAI,IAAK;EAAAC,EAAA;EAAA,IAAAC,QAAA;EACnC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,EAAE;EAClD,MAAM;IAAEa;EAAQ,CAAC,GAAGV,SAAS,EAAE;EACjC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEE,MAAM;IAAEW,KAAK,EAAEC,iBAAiB;IAAEC,KAAK,EAAEC;EAAkB,CAAC,IAAAP,QAAA,GAC1DR,OAAO,CACLW,OAAO,IAAI;IACTK,QAAQ,EAAE,IAAId,QAAQ,CAACC,SAAS,CAACc,OAAO,EAAEb,IAAI,CAACa,OAAO,CAAC;IACvDC,MAAM,EAAE,kBAAkB;IAC1BC,IAAI,EAAE,CAACb,IAAI,EAAEK,OAAO;EACtB,CAAC,CACF,cAAAH,QAAA,cAAAA,QAAA,GAAI,CAAC,CAAC;EACT,OAAOO,iBAAiB,aAAjBA,iBAAiB,uBAAjBA,iBAAiB,CAAG,CAAC,CAAC;AAC/B,CAAC;AAACR,EAAA,CApCIF,kBAAkB;EAAA,QAEFJ,SAAS,EA0B3BD,OAAO;AAAA;AAUX,eAAeK,kBAAkB"},"metadata":{},"sourceType":"module"}