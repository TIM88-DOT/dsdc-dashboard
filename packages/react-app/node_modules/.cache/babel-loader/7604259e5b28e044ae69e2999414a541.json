{"ast":null,"code":"var _jsxFileName = \"D:\\\\pcs\\\\dsdc-dashboard\\\\packages\\\\react-app\\\\src\\\\components\\\\TotalRewards\\\\TotalRewards.jsx\",\n  _s = $RefreshSig$();\nimport classes from \"./TotalRewards.module.scss\";\nimport { ButtonPrimary } from \"../index\";\nimport Typography from \"@mui/material/Typography\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { useEthers } from \"@usedapp/core\";\nimport { addresses, abis } from \"@uniswap-v2-app/contracts\";\nimport { ethers } from \"ethers\";\nimport useGetTotalRewards from \"../../hooks/useGetTotalRewards\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TotalRewards(props) {\n  _s();\n  const {\n    account,\n    library\n  } = useEthers();\n  const [loading, setLoading] = useState(false);\n  const plan = props.plan;\n  const totalRewardsValue = useGetTotalRewards(plan);\n  console.log(\"totalRewards\", totalRewardsValue);\n  const onClaim = async () => {\n    if (account) {\n      const signer = library.getSigner();\n      const mutantsStakingContract = new ethers.Contract(addresses.staking, abis.staking, signer);\n      if (Number(totalRewardsValue[0]) > 0) {\n        try {\n          setLoading(true);\n          await mutantsStakingContract.claimEarnedReward(plan);\n          setLoading(false);\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes[\"prize-container\"],\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        padding: \"0.7rem\"\n      },\n      children: \"YOUR REWARDS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), account ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          textAlign: \"center\",\n          fontSize: \"16px\"\n        },\n        variant: \"h6\",\n        component: \"h6\",\n        children: \"TOTAL REWARDS :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"h6\",\n        sx: {\n          color: \"#7b9c13\"\n        },\n        children: totalRewardsValue && ethers.utils.formatEther(totalRewardsValue[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Nothing to show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n        onClick: onClaim,\n        children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: \"1.5rem\",\n          color: \"warning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this) : \"CLAIM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(TotalRewards, \"3Dz+jUHe+lKeGhGjHOPXNdvciYI=\", false, function () {\n  return [useEthers, useGetTotalRewards];\n});\n_c = TotalRewards;\nvar _c;\n$RefreshReg$(_c, \"TotalRewards\");","map":{"version":3,"names":["classes","ButtonPrimary","Typography","CircularProgress","useEthers","addresses","abis","ethers","useGetTotalRewards","useState","jsxDEV","_jsxDEV","TotalRewards","props","_s","account","library","loading","setLoading","plan","totalRewardsValue","console","log","onClaim","signer","getSigner","mutantsStakingContract","Contract","staking","Number","claimEarnedReward","error","className","children","style","padding","fileName","_jsxFileName","lineNumber","columnNumber","sx","textAlign","fontSize","variant","component","color","utils","formatEther","actions","onClick","size","_c","$RefreshReg$"],"sources":["D:/pcs/dsdc-dashboard/packages/react-app/src/components/TotalRewards/TotalRewards.jsx"],"sourcesContent":["import classes from \"./TotalRewards.module.scss\";\r\nimport { ButtonPrimary } from \"../index\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { useEthers } from \"@usedapp/core\";\r\nimport { addresses, abis } from \"@uniswap-v2-app/contracts\";\r\nimport { ethers } from \"ethers\";\r\nimport useGetTotalRewards from \"../../hooks/useGetTotalRewards\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function TotalRewards(props) {\r\n  const { account, library } = useEthers();\r\n  const [loading, setLoading] = useState(false);\r\n  const plan = props.plan;\r\n  const totalRewardsValue = useGetTotalRewards(plan);\r\n  console.log(\"totalRewards\", totalRewardsValue);\r\n\r\n  const onClaim = async () => {\r\n    if (account) {\r\n      const signer = library.getSigner();\r\n      const mutantsStakingContract = new ethers.Contract(\r\n        addresses.staking,\r\n        abis.staking,\r\n        signer\r\n      );\r\n      if (Number(totalRewardsValue[0]) > 0) {\r\n        try {\r\n          setLoading(true);\r\n          await mutantsStakingContract.claimEarnedReward(plan);\r\n          setLoading(false);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className={classes[\"prize-container\"]}>\r\n      <h2 style={{ padding: \"0.7rem\" }}>YOUR REWARDS</h2>\r\n      {account ? (\r\n        <div>\r\n          <Typography\r\n            sx={{ textAlign: \"center\", fontSize: \"16px\" }}\r\n            variant=\"h6\"\r\n            component=\"h6\"\r\n          >\r\n            TOTAL REWARDS :\r\n          </Typography>\r\n\r\n          <Typography variant=\"h6\" component=\"h6\" sx={{ color: \"#7b9c13\" }}>\r\n            {totalRewardsValue &&\r\n              ethers.utils.formatEther(totalRewardsValue[0])}\r\n          </Typography>\r\n        </div>\r\n      ) : (\r\n        <p>Nothing to show</p>\r\n      )}\r\n\r\n      <div className={classes.actions}>\r\n        <ButtonPrimary onClick={onClaim}>\r\n          {loading ? (\r\n            <CircularProgress size=\"1.5rem\" color=\"warning\" />\r\n          ) : (\r\n            \"CLAIM\"\r\n          )}\r\n        </ButtonPrimary>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}