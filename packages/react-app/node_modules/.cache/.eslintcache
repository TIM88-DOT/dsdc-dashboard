[{"D:\\dsdc-dashboard\\packages\\react-app\\src\\index.js":"1","D:\\dsdc-dashboard\\packages\\react-app\\src\\App.js":"2","D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\Dashboard.js":"3","D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\index.js":"4","D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\Swap.js":"5","D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\listItems.js":"6","D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\WalletButton.js":"7","D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\NftStaking\\NftStaking.js":"8","D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\StakedMutants\\StakedMutants.jsx":"9","D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\StakedNfts\\StakedNfts.jsx":"10","D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\TotalRewards\\TotalRewards.jsx":"11","D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\MediaCard\\MediaCard.js":"12","D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\UnstakedImageList\\UnstakedImageList.jsx":"13","D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\StakedImageList\\StakedImageList.jsx":"14","D:\\dsdc-dashboard\\packages\\react-app\\src\\hooks\\useGetIsApprovedForAll.jsx":"15","D:\\dsdc-dashboard\\packages\\react-app\\src\\hooks\\useGetUserNFTs.jsx":"16","D:\\dsdc-dashboard\\packages\\react-app\\src\\hooks\\useGetStakedNFTs.jsx":"17","D:\\dsdc-dashboard\\packages\\react-app\\src\\hooks\\useGetTotalRewards.jsx":"18"},{"size":766,"mtime":1680099410280,"results":"19","hashOfConfig":"20"},{"size":293,"mtime":1678557708974,"results":"21","hashOfConfig":"20"},{"size":6263,"mtime":1678843792490,"results":"22","hashOfConfig":"20"},{"size":1790,"mtime":1678861257398,"results":"23","hashOfConfig":"20"},{"size":3612,"mtime":1680106181941,"results":"24","hashOfConfig":"20"},{"size":2190,"mtime":1679922318652,"results":"25","hashOfConfig":"20"},{"size":2126,"mtime":1680104936763,"results":"26","hashOfConfig":"20"},{"size":382,"mtime":1678675745008,"results":"27","hashOfConfig":"20"},{"size":8091,"mtime":1680140299030,"results":"28","hashOfConfig":"20"},{"size":7445,"mtime":1680132155959,"results":"29","hashOfConfig":"20"},{"size":2257,"mtime":1680111898023,"results":"30","hashOfConfig":"20"},{"size":2453,"mtime":1679931645173,"results":"31","hashOfConfig":"20"},{"size":2003,"mtime":1678501579110,"results":"32","hashOfConfig":"20"},{"size":2014,"mtime":1678679882833,"results":"33","hashOfConfig":"20"},{"size":691,"mtime":1680107051439,"results":"34","hashOfConfig":"20"},{"size":988,"mtime":1680109851601,"results":"35","hashOfConfig":"20"},{"size":1799,"mtime":1680132502415,"results":"36","hashOfConfig":"20"},{"size":1152,"mtime":1680138330330,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"a2ufmk",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\dsdc-dashboard\\packages\\react-app\\src\\index.js",[],["80","81"],"D:\\dsdc-dashboard\\packages\\react-app\\src\\App.js",["82"],"import React, { useEffect } from \"react\";\nimport { Container} from \"./components\";\nimport Dashboard from \"./components/Dashboard\";\n\nfunction App() {\n  // Read more about useDapp on https://usedapp.io/\n  return (\n    <Container>\n      <Dashboard />\n    </Container>\n  );\n}\n\nexport default App;\n","D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\Dashboard.js",["83","84"],"import * as React from 'react';\nimport { styled, createTheme, ThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport MuiDrawer from '@mui/material/Drawer';\nimport Box from '@mui/material/Box';\nimport MuiAppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport List from '@mui/material/List';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport Badge from '@mui/material/Badge';\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport Link from '@mui/material/Link';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport logo from \"../logo.png\";\nimport { mainListItems, secondaryListItems } from './listItems';\nimport Swap from './Swap';\nimport { grey } from '@mui/material/colors';\nimport { Route, Routes } from 'react-router-dom';\nimport NftStaking from './NftStaking/NftStaking';\nimport StakedNfts from './StakedNfts/StakedNfts';\nimport WalletButton from './WalletButton';\nimport StakedMutants from './StakedMutants/StakedMutants';\nimport TotalRewards from './TotalRewards/TotalRewards';\nfunction Copyright(props) {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://drunkskunksdc.com/\">\n        Drunk Skunks Drinking Club\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== 'open',\n})(({ theme, open }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create(['width', 'margin'], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\n  ({ theme, open }) => ({\n    '& .MuiDrawer-paper': {\n      position: 'relative',\n      whiteSpace: 'nowrap',\n      width: drawerWidth,\n      backgroundColor: \"#020202\",\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      boxSizing: 'border-box',\n      ...(!open && {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n          width: theme.spacing(9),\n        },\n      }),\n    },\n  }),\n);\n\nconst mdTheme = createTheme({\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: '#bfc500',\n    },\n    divider: '#bfc500',\n    text: {\n      primary: '#fff',\n      secondary: grey[500],\n    },\n  },\n  typography: {\n    fontFamily: \"Montserrat, sans-serif\",\n  },\n});\n\nfunction DashboardContent() {\n  const [open, setOpen] = React.useState(true);\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <ThemeProvider theme={mdTheme}>\n      <Box sx={{ display: 'flex' }}>\n        <CssBaseline />\n        <AppBar position=\"absolute\" open={open}>\n          <Toolbar\n            sx={{\n              backgroundColor: \"#020202\",\n              borderBottom:\"1px solid #bfc500\",\n              pr: '24px', // keep right padding when drawer closed\n            }}\n          >\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={toggleDrawer}\n              sx={{\n                marginRight: '36px',\n                ...(open && { display: 'none' }),\n              }}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              sx={{ flexGrow: 1 }}\n            >\n              Dashboard\n            </Typography>\n            <WalletButton />\n          </Toolbar>\n        </AppBar>\n        <Drawer variant=\"permanent\" open={open}>\n          <Toolbar\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'flex-end',\n              px: [1],\n              backgroundColor: (theme) => \"#020202\"\n            }}\n          >\n            <img style={{\n              width: \"9em\",\n              margin: \"auto\"\n            }} src={logo} />\n            <IconButton onClick={toggleDrawer}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </Toolbar>\n          <Divider />\n          <List component=\"nav\">\n            {mainListItems}\n            <Divider sx={{ my: 1 }} />\n            {secondaryListItems}\n          </List>\n        </Drawer>\n        <Box\n          component=\"main\"\n          sx={{\n            backgroundColor: (theme) => \"#020202\",\n            flexGrow: 1,\n            height: '100vh',\n            overflow: 'auto',\n          }}\n        >\n          <Toolbar />\n          <Container maxWidth=\"lg\" sx={{ mt: 1, mb: 4 }}>\n            <Grid container\n              justifyContent=\"center\"\n              alignItems=\"center\" item xs={12}>\n              <Routes>\n                <Route path=\"/\" element={<Swap />} />\n                <Route path=\"stake\" element={<NftStaking />} />\n                <Route path=\"stake/dsdc\" element={<><StakedNfts /> <TotalRewards plan={0} /> </>} />\n                <Route path=\"stake/dsdc-mutants\" element={<><StakedMutants /> <TotalRewards plan={1} /> </>} />\n              </Routes>\n            </Grid>\n            <Copyright sx={{ position: \"sticky\", bottom: \"-50px\", left: \"50%\" }} />\n          </Container>\n        </Box>\n      </Box>\n    </ThemeProvider>\n  );\n}\n\nexport default function Dashboard() {\n  return <DashboardContent />;\n}\n","D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\index.js",[],"D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\Swap.js",["85","86"],"import React, { useState } from 'react';\r\nimport { ThemeProvider } from 'styled-components'\r\nimport { Button, Card, CardBody, Flex, Heading, Text, Input, TokenImage, SwapVertIcon } from '@pancakeswap/uikit';\r\nimport { dark } from '@pancakeswap/uikit'\r\nimport { ButtonPrimary } from '.';\r\nimport BNB from '../assets/images/bnb.png';\r\nimport STINK from '../assets/images/stink.jpg';\r\nimport { border } from '@mui/system';\r\n\r\nconst Swap = () => {\r\n  const [fromToken, setFromToken] = useState('BNB');\r\n  const [toToken, setToToken] = useState('STINK');\r\n  const [fromTokenLogo, setFromTokenLogo] = useState(BNB);\r\n  const [toTokenLogo, setToTokenLogo] = useState(STINK);\r\n  const [fromTokenAmount, setFromTokenAmount] = useState('');\r\n  const [toTokenAmount, setToTokenAmount] = useState('');\r\n\r\n  const handleFromTokenAmountChange = (e) => {\r\n    setFromTokenAmount(e.target.value);\r\n  };\r\n\r\n  const handleToTokenAmountChange = (e) => {\r\n    setToTokenAmount(e.target.value);\r\n  };\r\n\r\n  const handleSwap = () => {\r\n    // Do the swap\r\n    console.log(`Swapping ${fromTokenAmount} ${fromToken} for ${toTokenAmount} ${toToken}`);\r\n  };\r\n\r\n  const handleSwitchTokens = () => {\r\n    // Switch the from and to tokens\r\n    const tempToken = fromToken;\r\n    const tempAmount = fromTokenAmount;\r\n    const tempLogo = fromTokenLogo;\r\n    setFromToken(toToken);\r\n    setFromTokenLogo(toTokenLogo)\r\n    setToTokenLogo(tempLogo)\r\n    setToToken(tempToken);\r\n    setFromTokenAmount(toTokenAmount);\r\n    setToTokenAmount(tempAmount);\r\n\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={dark}>\r\n      <Card style={{\r\n        marginTop: \"56px\",\r\n        marginBottom: \"100px\",\r\n        background: \"#020202\",\r\n        border: \"1px solid #bfc500\"\r\n      }}>\r\n        <CardBody style={{\r\n          background: \"#020202\",\r\n        }}>\r\n          <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Heading>Swap</Heading>\r\n          </Flex>\r\n          <Text>Buy and sell $STINK</Text>\r\n          <Flex flexDirection=\"column\" mt=\"24px\">\r\n            <Flex justifyContent=\"space-between\">\r\n              <Text>From</Text>\r\n              <Text>{`Balance: 100.0 ${fromToken}`}</Text>\r\n            </Flex>\r\n            <Flex mb=\"16px\" alignItems=\"center\">\r\n              <Input style={{ marginBlock: \"8px\" }} type=\"number\"\r\n                placeholder=\"0.0\"\r\n                value={fromTokenAmount}\r\n                onChange={handleFromTokenAmountChange}\r\n                mt=\"8px\"\r\n                flex=\"1\" />\r\n              <Text mx=\"8px\">{fromToken}</Text>\r\n              <TokenImage src={fromTokenLogo} height={35} width={35} title={\"BNB\"} />\r\n            </Flex>\r\n            <div style={{ margin: \"auto\" }} onClick={handleSwitchTokens}>\r\n              <SwapVertIcon width=\"35px\" />\r\n            </div>\r\n            <Flex justifyContent=\"space-between\" mt=\"16px\">\r\n              <Text>To</Text>\r\n              <Text>{`Balance: 100.0 ${toToken}`}</Text>\r\n            </Flex>\r\n            <Flex mb=\"24px\" alignItems=\"center\">\r\n\r\n              <Input style={{ marginBlock: \"8px\" }} type=\"number\"\r\n                placeholder=\"0.0\"\r\n                value={toTokenAmount}\r\n                onChange={handleToTokenAmountChange}\r\n                flex=\"1\" />\r\n              <Text mx=\"8px\">{toToken}</Text>\r\n              <TokenImage src={toTokenLogo} height={35} width={35} title={\"$STINK\"} />\r\n\r\n            </Flex>\r\n            <ButtonPrimary onClick={handleSwap}>\r\n              Swap\r\n            </ButtonPrimary>\r\n          </Flex>\r\n        </CardBody>\r\n      </Card>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Swap;","D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\listItems.js",["87"],"import * as React from 'react';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListSubheader from '@mui/material/ListSubheader';\nimport SwapVertIcon from '@mui/icons-material/SwapVert';\nimport RocketLaunchIcon from '@mui/icons-material/RocketLaunch';\nimport MonetizationOnIcon from '@mui/icons-material/MonetizationOn';\nimport PublicIcon from '@mui/icons-material/Public';\nimport AgricultureIcon from '@mui/icons-material/Agriculture';\nimport TelegramIcon from '@mui/icons-material/Telegram';\nimport TwitterIcon from '@mui/icons-material/Twitter';\nimport { Link } from \"react-router-dom\";\n\nconst linkStyle = {\n  margin: \" 0\",\n  fontFamily: \"Montserrat, sans-serif\",\n  fontWeight: \"400\",\n  fontSize: \"1rem\",\n  lineHeight: \"1.5\",\n  display: \"block\",\n  color: \"#fff\",\n  textDecoration: \"none\"\n}\nexport const mainListItems = (\n\n  <React.Fragment>\n\n    <Link style={linkStyle} to={`/`}>\n      <ListItemButton>\n        <ListItemIcon>\n          <SwapVertIcon />\n        </ListItemIcon>\n        Swap\n      </ListItemButton>\n    </Link>\n\n    <Link style={linkStyle} to={`stake`}>\n      <ListItemButton>\n        <ListItemIcon>\n          <RocketLaunchIcon />\n        </ListItemIcon>\n        NFT Staking\n      </ListItemButton>\n    </Link>\n\n    <ListItemButton>\n      <ListItemIcon>\n        <MonetizationOnIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Token Staking\" />\n    </ListItemButton>\n\n  </React.Fragment>\n);\n\nexport const secondaryListItems = (\n  <React.Fragment>\n    <ListSubheader sx={{backgroundColor: \"#020202\"}} component=\"div\" inset>\n      Socials\n    </ListSubheader>\n    <ListItemButton>\n      <ListItemIcon>\n        <TelegramIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Telegram\" />\n    </ListItemButton>\n    <ListItemButton>\n      <ListItemIcon>\n        <TwitterIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Twitter\" />\n    </ListItemButton>\n    <ListItemButton>\n      <ListItemIcon>\n        <PublicIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Website\" />\n    </ListItemButton>\n  </React.Fragment>\n);\n","D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\WalletButton.js",[],"D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\NftStaking\\NftStaking.js",[],"D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\StakedMutants\\StakedMutants.jsx",["88","89","90","91","92"],"D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\StakedNfts\\StakedNfts.jsx",["93","94","95","96","97","98","99"],"D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\TotalRewards\\TotalRewards.jsx",[],"D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\MediaCard\\MediaCard.js",["100"],"import * as React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport logo from \"../../assets/images/logo.png\";\r\nimport mutantLogo from \"../../assets/images/mutants-logo.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classes from \"./MediaCard.module.css\"\r\nimport { ButtonPrimary } from '..';\r\n\r\nexport default function MediaCard(props) {\r\n  const defaultClass = props.mutants ? \"card--mutant\" : \"card\"\r\n  const uri = props.mutants ? `dsdc-mutants` : `dsdc`\r\n  const linkStyle = {\r\n    margin: \"0\",\r\n    fontFamily: \"Montserrat, sans-serif\",\r\n    fontWeight: \"400\",\r\n    fontSize: \"1rem\",\r\n    lineHeight: \"1.5\",\r\n    display: \"block\",\r\n    color: \"#fff\",\r\n    textDecoration: \"none\"\r\n  }\r\n  const CardMediaStyle = props.mutants ? {\r\n    height: 190, backgroundSize: \"55%\"\r\n  } : {\r\n    height: 190, backgroundSize: \"45%\"\r\n  }\r\n  return (\r\n    <Card sx={{ backgroundImage: \"none\", border: \"1px solid #bfc500\", backgroundColor: \"transparent\" }} className={classes[defaultClass]}>\r\n      <CardMedia\r\n        sx={CardMediaStyle}\r\n        image={props.mutants ? mutantLogo : logo}\r\n        title={props.mutants ? \"DSDC Mutants Staking\" : \"DSDC Staking\"}\r\n      />\r\n      <CardContent sx={{ padding: \"14px\" }}>\r\n        <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n          {props.mutants ? \"Mutants Staking\" : \"DSDC Staking\"}\r\n        </Typography>\r\n        {props.mutants ? <>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            â 10x Higher APR\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            â 1 month lock\r\n          </Typography></> :\r\n          <>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              â Lower APR\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              â Can unstake anytime\r\n            </Typography>\r\n          </>}\r\n      </CardContent>\r\n      <CardActions sx={{ justifyContent: \"center\", marginTop: \"50px\", marginBottom: \"20px\" }}>\r\n        <Link style={linkStyle} to={uri}>\r\n          <ButtonPrimary>Select</ButtonPrimary>\r\n        </Link>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}","D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\UnstakedImageList\\UnstakedImageList.jsx",[],"D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\StakedImageList\\StakedImageList.jsx",[],"D:\\dsdc-dashboard\\packages\\react-app\\src\\hooks\\useGetIsApprovedForAll.jsx",[],"D:\\dsdc-dashboard\\packages\\react-app\\src\\hooks\\useGetUserNFTs.jsx",[],"D:\\dsdc-dashboard\\packages\\react-app\\src\\hooks\\useGetStakedNFTs.jsx",[],"D:\\dsdc-dashboard\\packages\\react-app\\src\\hooks\\useGetTotalRewards.jsx",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":26},{"ruleId":"105","severity":1,"message":"109","line":12,"column":8,"nodeType":"107","messageId":"108","endLine":12,"endColumn":13},{"ruleId":"110","severity":1,"message":"111","line":157,"column":13,"nodeType":"112","endLine":160,"endColumn":29},{"ruleId":"105","severity":1,"message":"113","line":3,"column":10,"nodeType":"107","messageId":"108","endLine":3,"endColumn":16},{"ruleId":"105","severity":1,"message":"114","line":8,"column":10,"nodeType":"107","messageId":"108","endLine":8,"endColumn":16},{"ruleId":"105","severity":1,"message":"115","line":10,"column":8,"nodeType":"107","messageId":"108","endLine":10,"endColumn":23},{"ruleId":"105","severity":1,"message":"116","line":2,"column":8,"nodeType":"107","messageId":"108","endLine":2,"endColumn":17},{"ruleId":"105","severity":1,"message":"117","line":3,"column":8,"nodeType":"107","messageId":"108","endLine":3,"endColumn":24},{"ruleId":"105","severity":1,"message":"118","line":4,"column":8,"nodeType":"107","messageId":"108","endLine":4,"endColumn":14},{"ruleId":"105","severity":1,"message":"119","line":11,"column":31,"nodeType":"107","messageId":"108","endLine":11,"endColumn":41},{"ruleId":"105","severity":1,"message":"120","line":81,"column":18,"nodeType":"107","messageId":"108","endLine":81,"endColumn":40},{"ruleId":"105","severity":1,"message":"106","line":8,"column":20,"nodeType":"107","messageId":"108","endLine":8,"endColumn":29},{"ruleId":"105","severity":1,"message":"119","line":8,"column":31,"nodeType":"107","messageId":"108","endLine":8,"endColumn":41},{"ruleId":"105","severity":1,"message":"121","line":9,"column":10,"nodeType":"107","messageId":"108","endLine":9,"endColumn":17},{"ruleId":"105","severity":1,"message":"122","line":22,"column":10,"nodeType":"107","messageId":"108","endLine":22,"endColumn":23},{"ruleId":"105","severity":1,"message":"123","line":22,"column":25,"nodeType":"107","messageId":"108","endLine":22,"endColumn":41},{"ruleId":"105","severity":1,"message":"124","line":29,"column":20,"nodeType":"107","messageId":"108","endLine":29,"endColumn":27},{"ruleId":"105","severity":1,"message":"120","line":61,"column":18,"nodeType":"107","messageId":"108","endLine":61,"endColumn":40},{"ruleId":"105","severity":1,"message":"113","line":6,"column":8,"nodeType":"107","messageId":"108","endLine":6,"endColumn":14},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Badge' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","'border' is defined but never used.","'AgricultureIcon' is defined but never used.","'FormGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'Switch' is defined but never used.","'useContext' is defined but never used.","'setApprovalForAllState' is assigned a value but never used.","'useCall' is defined but never used.","'tokensOfOwner' is assigned a value but never used.","'setTokensOfOwner' is assigned a value but never used.","'chainId' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]