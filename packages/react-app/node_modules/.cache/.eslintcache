[{"D:\\dsdc-dashboard\\packages\\react-app\\src\\index.js":"1","D:\\dsdc-dashboard\\packages\\react-app\\src\\App.js":"2","D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\Dashboard.js":"3","D:\\dsdc-dashboard\\packages\\react-app\\src\\graphql\\subgraph.js":"4","D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\index.js":"5","D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\listItems.js":"6","D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\Swap.js":"7","D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\Title.js":"8","D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\NftStaking\\NftStaking.js":"9","D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\MediaCard\\MediaCard.js":"10","D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\WalletButton.js":"11"},{"size":1257,"mtime":1678065921188,"results":"12","hashOfConfig":"13"},{"size":1195,"mtime":1678498556907,"results":"14","hashOfConfig":"13"},{"size":5892,"mtime":1678504067375,"results":"15","hashOfConfig":"13"},{"size":325,"mtime":1664107510000,"results":"16","hashOfConfig":"13"},{"size":1059,"mtime":1678498920563,"results":"17","hashOfConfig":"13"},{"size":2482,"mtime":1678066101445,"results":"18","hashOfConfig":"13"},{"size":797,"mtime":1678498719921,"results":"19","hashOfConfig":"13"},{"size":352,"mtime":1677577386000,"results":"20","hashOfConfig":"13"},{"size":349,"mtime":1678293772672,"results":"21","hashOfConfig":"13"},{"size":2225,"mtime":1678505709735,"results":"22","hashOfConfig":"13"},{"size":1095,"mtime":1678497896605,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"a2ufmk",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"D:\\dsdc-dashboard\\packages\\react-app\\src\\index.js",[],["52","53"],"D:\\dsdc-dashboard\\packages\\react-app\\src\\App.js",["54","55"],"import { useQuery } from \"@apollo/client\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { useCall } from \"@usedapp/core\";\nimport React, { useEffect } from \"react\";\n\nimport { Container} from \"./components\";\n\nimport Dashboard from \"./components/Dashboard\";\nimport { MAINNET_ID, addresses, abis } from \"@uniswap-v2-app/contracts\";\nimport GET_AGGREGATED_UNISWAP_DATA from \"./graphql/subgraph\";\n\n\nfunction App() {\n  // Read more about useDapp on https://usedapp.io/\n  const { error: contractCallError, value: reserves } =\n    useCall({\n      contract: new Contract(addresses[MAINNET_ID].pairs[\"DAI-WETH\"], abis.pair),\n      method: \"getReserves\",\n      args: [],\n    }) ?? {};\n\n  const { loading, error: subgraphQueryError, data } = useQuery(GET_AGGREGATED_UNISWAP_DATA);\n\n  useEffect(() => {\n    if (subgraphQueryError) {\n      console.error(\"Error while querying subgraph:\", subgraphQueryError.message);\n      return;\n    }\n    if (!loading && data && data.uniswapFactories) {\n      console.log({ uniswapFactories: data.uniswapFactories });\n    }\n  }, [loading, subgraphQueryError, data]);\n\n  return (\n    <Container>\n      <Dashboard />\n    </Container>\n  );\n}\n\nexport default App;\n","D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\Dashboard.js",["56","57"],"import * as React from 'react';\nimport { styled, createTheme, ThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport MuiDrawer from '@mui/material/Drawer';\nimport Box from '@mui/material/Box';\nimport MuiAppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport List from '@mui/material/List';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport Badge from '@mui/material/Badge';\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport Link from '@mui/material/Link';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport logo from \"../logo.png\";\nimport { mainListItems, secondaryListItems } from './listItems';\nimport Swap from './Swap';\nimport { grey } from '@mui/material/colors';\nimport { Route, Routes } from 'react-router-dom';\nimport NftStaking from './NftStaking/NftStaking';\nimport WalletButton from './WalletButton';\nfunction Copyright(props) {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://drunkskunksdc.com/\">\n        Drunk Skunks Drinking Club\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== 'open',\n})(({ theme, open }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create(['width', 'margin'], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\n  ({ theme, open }) => ({\n    '& .MuiDrawer-paper': {\n      position: 'relative',\n      whiteSpace: 'nowrap',\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      boxSizing: 'border-box',\n      ...(!open && {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n          width: theme.spacing(9),\n        },\n      }),\n    },\n  }),\n);\n\nconst mdTheme = createTheme({\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: '#bfc500',\n    },\n    divider: '#bfc500',\n    text: {\n      primary: '#fff',\n      secondary: grey[500],\n    },\n  },\n  typography: {\n    fontFamily: \"Montserrat, sans-serif\",\n  },\n});\n\nfunction DashboardContent() {\n  const [open, setOpen] = React.useState(true);\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <ThemeProvider theme={mdTheme}>\n      <Box sx={{ display: 'flex' }}>\n        <CssBaseline />\n        <AppBar position=\"absolute\" open={open}>\n          <Toolbar\n            sx={{\n              pr: '24px', // keep right padding when drawer closed\n            }}\n          >\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={toggleDrawer}\n              sx={{\n                marginRight: '36px',\n                ...(open && { display: 'none' }),\n              }}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              sx={{ flexGrow: 1 }}\n            >\n              Dashboard\n            </Typography>\n            <WalletButton />\n          </Toolbar>\n        </AppBar>\n        <Drawer variant=\"permanent\" open={open}>\n          <Toolbar\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'flex-end',\n              px: [1],\n            }}\n          >\n            <img style={{\n              width: \"9em\",\n              margin: \"auto\"\n            }} src={logo} />\n            <IconButton onClick={toggleDrawer}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </Toolbar>\n          <Divider />\n          <List component=\"nav\">\n            {mainListItems}\n            <Divider sx={{ my: 1 }} />\n            {secondaryListItems}\n          </List>\n        </Drawer>\n        <Box\n          component=\"main\"\n          sx={{\n            backgroundColor: (theme) =>\n              theme.palette.mode === 'light'\n                ? theme.palette.grey[100]\n                : theme.palette.grey[900],\n            flexGrow: 1,\n            height: '100vh',\n            overflow: 'auto',\n          }}\n        >\n          <Toolbar />\n          <Container maxWidth=\"lg\" sx={{ mt: 1, mb: 4 }}>\n            <Grid container\n              justifyContent=\"center\"\n              alignItems=\"center\" item xs={12}>\n              <Routes>\n                <Route path=\"/\" element={<Swap />} />\n                <Route path=\"stake\" element={<NftStaking />} />\n                <Route path=\"tube\" element={<div>DDDD</div>} />\n              </Routes>\n            </Grid>\n            <Copyright sx={{ position: \"sticky\", bottom: \"-50px\", left: \"50%\" }} />\n          </Container>\n        </Box>\n      </Box>\n    </ThemeProvider>\n  );\n}\n\nexport default function Dashboard() {\n  return <DashboardContent />;\n}\n","D:\\dsdc-dashboard\\packages\\react-app\\src\\graphql\\subgraph.js",[],"D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\index.js",[],"D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\listItems.js",["58","59","60"],"import * as React from 'react';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListSubheader from '@mui/material/ListSubheader';\nimport SwapVertIcon from '@mui/icons-material/SwapVert';\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\nimport PeopleIcon from '@mui/icons-material/People';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport RocketLaunchIcon from '@mui/icons-material/RocketLaunch';\nimport MonetizationOnIcon from '@mui/icons-material/MonetizationOn';\nimport PublicIcon from '@mui/icons-material/Public';\nimport AgricultureIcon from '@mui/icons-material/Agriculture';\nimport TelegramIcon from '@mui/icons-material/Telegram';\nimport TwitterIcon from '@mui/icons-material/Twitter';\nimport { Link } from \"react-router-dom\";\n\nconst linkStyle = {\n  margin: \" 0\",\n  fontFamily: \"Montserrat, sans-serif\",\n  fontWeight: \"400\",\n  fontSize: \"1rem\",\n  lineHeight: \"1.5\",\n  display: \"block\",\n  color: \"#fff\",\n  textDecoration: \"none\"\n}\nexport const mainListItems = (\n\n  <React.Fragment>\n\n    <Link style={linkStyle} to={`/`}>\n      <ListItemButton>\n        <ListItemIcon>\n          <SwapVertIcon />\n        </ListItemIcon>\n        Swap\n      </ListItemButton>\n    </Link>\n\n    <Link style={linkStyle} to={`stake`}>\n      <ListItemButton>\n        <ListItemIcon>\n          <RocketLaunchIcon />\n        </ListItemIcon>\n        NFT Staking\n      </ListItemButton>\n    </Link>\n\n    <ListItemButton>\n      <ListItemIcon>\n        <MonetizationOnIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Token Staking\" />\n    </ListItemButton>\n\n    <ListItemButton>\n      <ListItemIcon>\n        <AgricultureIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"LP Farming\" />\n    </ListItemButton>\n\n  </React.Fragment>\n);\n\nexport const secondaryListItems = (\n  <React.Fragment>\n    <ListSubheader component=\"div\" inset>\n      Socials\n    </ListSubheader>\n    <ListItemButton>\n      <ListItemIcon>\n        <TelegramIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Telegram\" />\n    </ListItemButton>\n    <ListItemButton>\n      <ListItemIcon>\n        <TwitterIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Twitter\" />\n    </ListItemButton>\n    <ListItemButton>\n      <ListItemIcon>\n        <PublicIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Website\" />\n    </ListItemButton>\n  </React.Fragment>\n);\n","D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\Swap.js",["61"],"import React from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nconst Swap = () => {\r\n  return (\r\n    <Paper sx={{\r\n      mt: 7,\r\n      p: 1,\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      height: 600,\r\n      marginBottom: \"70px\"\r\n    }}>\r\n      <iframe width=\"400\" height=\"590\" frameborder=\"0\" allow=\"clipboard-read *; clipboard-write *; web-share *; accelerometer *; autoplay *; camera *; gyroscope *; payment *; geolocation *\" src=\"https://flooz.trade/embed/trade?swapDisabled=false&swapToTokenAddress=0xdc42c3a92c4A03F9b9F3FBaBa0125286FDAa6772&swapLockToToken=true&onRampDisabled=true&onRampAsDefault=false&onRampDefaultAmount=200&network=bsc&lightMode=false&primaryColor=%23bfc500&roundedCorners=0&padding=32\" ></iframe>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Swap;\r\n","D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\Title.js",[],["62","63"],"D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\NftStaking\\NftStaking.js",[],"D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\MediaCard\\MediaCard.js",[],"D:\\dsdc-dashboard\\packages\\react-app\\src\\components\\WalletButton.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":15,"column":18,"nodeType":"70","messageId":"71","endLine":15,"endColumn":35},{"ruleId":"68","severity":1,"message":"72","line":15,"column":44,"nodeType":"70","messageId":"71","endLine":15,"endColumn":52},{"ruleId":"68","severity":1,"message":"73","line":12,"column":8,"nodeType":"70","messageId":"71","endLine":12,"endColumn":13},{"ruleId":"74","severity":1,"message":"75","line":150,"column":13,"nodeType":"76","endLine":153,"endColumn":29},{"ruleId":"68","severity":1,"message":"77","line":7,"column":8,"nodeType":"70","messageId":"71","endLine":7,"endColumn":24},{"ruleId":"68","severity":1,"message":"78","line":8,"column":8,"nodeType":"70","messageId":"71","endLine":8,"endColumn":18},{"ruleId":"68","severity":1,"message":"79","line":9,"column":8,"nodeType":"70","messageId":"71","endLine":9,"endColumn":16},{"ruleId":"80","severity":1,"message":"81","line":13,"column":7,"nodeType":"76","endLine":13,"endColumn":477},{"ruleId":"64","replacedBy":"82"},{"ruleId":"66","replacedBy":"83"},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'contractCallError' is assigned a value but never used.","Identifier","unusedVar","'reserves' is assigned a value but never used.","'Badge' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ShoppingCartIcon' is defined but never used.","'PeopleIcon' is defined but never used.","'MenuIcon' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.",["84"],["85"],"no-global-assign","no-unsafe-negation"]